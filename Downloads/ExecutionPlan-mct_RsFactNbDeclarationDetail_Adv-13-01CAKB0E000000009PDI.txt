[{"name":"InfaSpark0","content":"package com.informatica.exec\n\nimport com.informatica.bootstrap.functions._\nimport com.informatica.bootstrap.InfaParams._\nimport com.informatica.products.infatransform.spark.boot._\nimport com.informatica.bootstrap._\nimport com.informatica.hive._\nimport com.informatica.bootstrap.{JsonProtocol \u003d\u003e JP}\nimport org.apache.spark._\nimport org.apache.spark.rdd._\nimport org.apache.spark.storage.StorageLevel._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.functions.{ broadcast \u003d\u003e infabroadcast }\nimport org.apache.spark.sql.infa.expressions._\nimport java.io._\nimport scala.reflect.ClassTag\nimport org.apache.spark.sql.catalyst.expressions.Caster\nimport org.apache.spark.sql.catalyst.expressions.JavaCaster\nimport com.informatica.bootstrap.JavaTx._\nimport org.apache.spark.sql.infafunctions._\nimport com.informatica.bootstrap.parser.functions._\n\nobject InfaSpark0 {\n  def main(s:Array[String]) {\n    val params \u003d new InfaParams(\"InfaSpark0\", \"YYYY-MM-DD HH24:MI:SS\")\n    val sc \u003d SparkContextLoader.getSparkContext\n    val sqlContext \u003d SparkContextLoader.getSQLContext\n    val ls \u003d null\n    import sqlContext.implicits._\n    val icast \u003d caster(\"YYYY-MM-DD HH24:MI:SS\")\n    val acast \u003d adapterCaster()\n    val jcast \u003d JavaCaster()\n    val hcast \u003d caster(\"YYYY-MM-DD HH24:MI:SS.NS\")\n\n    sqlContext.setConf(\"infaspark.shuffle.max.partitions\", \"10000\")\n\n    val preJobs \u003d () \u003d\u003e {\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"pretask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(0)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"pretask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(1)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"pretask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(2)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"pretask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(3)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"pretask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(4)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n    }\n    preJobs()\n\n    val f0:(DataFrame)\u003d\u003eDataFrame \u003d (p1)\u003d\u003e{\n      val v2 \u003d Step(icast(p1(1), LongType));\n      val v3 \u003d Step(icast(p1(2), LongType));\n      val v4 \u003d Step(icast(p1(4), StringType));\n      val v5 \u003d Step(icast(p1(5), LongType));\n      val v6 \u003d Step(icast(p1(11), LongType));\n      val v7 \u003d Step(icast(p1(13), StringType));\n      val v8 \u003d Step(icast(p1(14), LongType));\n      val v9 \u003d Step(icast(p1(21), LongType));\n      val v10 \u003d Step(icast(p1(24), LongType));\n      val v11 \u003d Step(icast(p1(40), LongType));\n      val v12 \u003d Step(icast(p1(44), LongType));\n      val v13 \u003d Step(icast(p1(57), StringType));\n      val v14 \u003d Step(icast(p1(58), LongType));\n      val v15 \u003d Step(p1(59));\n      val v16 \u003d Step(icast(p1(0), StringType));\n      val v17 \u003d Step(lit(\" \"));\n      val v18 \u003d Step(e_ltrim(e_rtrim(v16.get(), v17.get()), v17.get()));\n      val v19 \u003d Step(lit(\"\"));\n      val v20 \u003d Step(icast(v3.get(), StringType));\n      val v21 \u003d Step(e_ltrim(e_rtrim(v20.get(), v17.get()), v17.get()));\n      val v22 \u003d Step(icast(p1(10), StringType));\n      val v23 \u003d Step(e_ltrim(e_rtrim(v22.get(), v17.get()), v17.get()));\n      val v24 \u003d Step(icast(p1(12), StringType));\n      val v25 \u003d Step(e_ltrim(e_rtrim(v24.get(), v17.get()), v17.get()));\n      val v26 \u003d Step(lit(0));\n      val v27 \u003d Step(when(when(v18.get().isNull, v19.get()).otherwise(v16.get()).!\u003d\u003d(v19.get()).\u0026\u0026(when(v21.get().isNull, v19.get()).otherwise(v20.get()).!\u003d\u003d(v19.get())).\u0026\u0026(when(v23.get().isNull, v19.get()).otherwise(v22.get()).!\u003d\u003d(v19.get())).\u0026\u0026(when(v25.get().isNull, v19.get()).otherwise(v24.get()).!\u003d\u003d(v19.get())), lit(1)).otherwise(v26.get()));\n      val v28 \u003d Step(icast(p1(27), StringType));\n      val v29 \u003d Step(e_ltrim(e_rtrim(v28.get(), v17.get()), v17.get()));\n      val v30 \u003d Step(icast(p1(35), StringType));\n      val v31 \u003d Step(e_ltrim(e_rtrim(v30.get(), v17.get()), v17.get()));\n      val v32 \u003d Step(icast(p1(15), StringType));\n      val v33 \u003d Step(e_ltrim(e_rtrim(v32.get(), v17.get()), v17.get()));\n      val v34 \u003d Step(icast(p1(31), StringType));\n      val v35 \u003d Step(e_ltrim(e_rtrim(v34.get(), v17.get()), v17.get()));\n      val v36 \u003d Step(icast(p1(30), StringType));\n      val v37 \u003d Step(e_ltrim(e_rtrim(v36.get(), v17.get()), v17.get()));\n      val v38 \u003d Step(icast(p1(33), StringType));\n      val v39 \u003d Step(e_ltrim(e_rtrim(v38.get(), v17.get()), v17.get()));\n      val v40 \u003d Step(icast(p1(8), StringType));\n      val v41 \u003d Step(e_ltrim(e_rtrim(v40.get(), v17.get()), v17.get()));\n      val v42 \u003d Step(icast(p1(32), StringType));\n      val v43 \u003d Step(e_ltrim(e_rtrim(v42.get(), v17.get()), v17.get()));\n      val v44 \u003d Step(icast(p1(41), StringType));\n      val v45 \u003d Step(e_ltrim(e_rtrim(v44.get(), v17.get()), v17.get()));\n      val v46 \u003d Step(icast(p1(7), StringType));\n      val v47 \u003d Step(e_ltrim(e_rtrim(v46.get(), v17.get()), v17.get()));\n      val v48 \u003d Step(icast(p1(20), StringType));\n      val v49 \u003d Step(e_ltrim(e_rtrim(v48.get(), v17.get()), v17.get()));\n      val v50 \u003d Step(icast(p1(45), StringType));\n      val v51 \u003d Step(e_ltrim(e_rtrim(v50.get(), v17.get()), v17.get()));\n      val v52 \u003d Step(icast(p1(16), StringType));\n      val v53 \u003d Step(e_ltrim(e_rtrim(v52.get(), v17.get()), v17.get()));\n      val v54 \u003d Step(icast(p1(47), StringType));\n      val v55 \u003d Step(e_ltrim(e_rtrim(v54.get(), v17.get()), v17.get()));\n      val v56 \u003d Step(icast(p1(18), StringType));\n      val v57 \u003d Step(e_ltrim(e_rtrim(v56.get(), v17.get()), v17.get()));\n      val v58 \u003d Step(icast(p1(49), StringType));\n      val v59 \u003d Step(e_ltrim(e_rtrim(v58.get(), v17.get()), v17.get()));\n      val v60 \u003d Step(icast(p1(9), StringType));\n      val v61 \u003d Step(e_ltrim(e_rtrim(v60.get(), v17.get()), v17.get()));\n      val v62 \u003d Step(icast(p1(34), StringType));\n      val v63 \u003d Step(e_ltrim(e_rtrim(v62.get(), v17.get()), v17.get()));\n      val v64 \u003d Step(icast(p1(38), StringType));\n      val v65 \u003d Step(e_ltrim(e_rtrim(v64.get(), v17.get()), v17.get()));\n      val v66 \u003d Step(icast(p1(56), StringType));\n      val v67 \u003d Step(e_ltrim(e_rtrim(v66.get(), v17.get()), v17.get()));\n      val v68 \u003d Step(icast(p1(22), StringType));\n      val v69 \u003d Step(e_ltrim(e_rtrim(v68.get(), v17.get()), v17.get()));\n      val v70 \u003d Step(icast(p1(52), StringType));\n      val v71 \u003d Step(e_ltrim(e_rtrim(v70.get(), v17.get()), v17.get()));\n      val v72 \u003d Step(icast(p1(29), StringType));\n      val v73 \u003d Step(e_ltrim(e_rtrim(v72.get(), v17.get()), v17.get()));\n      val v74 \u003d Step(icast(p1(36), StringType));\n      val v75 \u003d Step(e_ltrim(e_rtrim(v74.get(), v17.get()), v17.get()));\n      val v76 \u003d Step(icast(p1(54), StringType));\n      val v77 \u003d Step(e_ltrim(e_rtrim(v76.get(), v17.get()), v17.get()));\n      val v78 \u003d Step(icast(p1(26), StringType));\n      val v79 \u003d Step(e_ltrim(e_rtrim(v78.get(), v17.get()), v17.get()));\n      val v80 \u003d Step(icast(p1(3), StringType));\n      val v81 \u003d Step(e_ltrim(e_rtrim(v80.get(), v17.get()), v17.get()));\n      val v82 \u003d Step(icast(p1(50), StringType));\n      val v83 \u003d Step(e_ltrim(e_rtrim(v82.get(), v17.get()), v17.get()));\n      val v84 \u003d Step(icast(p1(23), StringType));\n      val v85 \u003d Step(e_ltrim(e_rtrim(v84.get(), v17.get()), v17.get()));\n      val v86 \u003d Step(icast(p1(42), StringType));\n      val v87 \u003d Step(e_ltrim(e_rtrim(v86.get(), v17.get()), v17.get()));\n      val v88 \u003d Step(icast(p1(51), StringType));\n      val v89 \u003d Step(e_ltrim(e_rtrim(v88.get(), v17.get()), v17.get()));\n      val v90 \u003d Step(icast(p1(19), StringType));\n      val v91 \u003d Step(e_ltrim(e_rtrim(v90.get(), v17.get()), v17.get()));\n      val v92 \u003d Step(icast(p1(39), StringType));\n      val v93 \u003d Step(e_ltrim(e_rtrim(v92.get(), v17.get()), v17.get()));\n      val v94 \u003d Step(icast(p1(53), StringType));\n      val v95 \u003d Step(e_ltrim(e_rtrim(v94.get(), v17.get()), v17.get()));\n      val v96 \u003d Step(icast(p1(28), StringType));\n      val v97 \u003d Step(e_ltrim(e_rtrim(v96.get(), v17.get()), v17.get()));\n      val v98 \u003d Step(icast(p1(17), StringType));\n      val v99 \u003d Step(e_ltrim(e_rtrim(v98.get(), v17.get()), v17.get()));\n      val v100 \u003d Step(icast(p1(55), StringType));\n      val v101 \u003d Step(e_ltrim(e_rtrim(v100.get(), v17.get()), v17.get()));\n      val v102 \u003d Step(icast(p1(37), StringType));\n      val v103 \u003d Step(e_ltrim(e_rtrim(v102.get(), v17.get()), v17.get()));\n      val v104 \u003d Step(icast(p1(43), StringType));\n      val v105 \u003d Step(e_ltrim(e_rtrim(v104.get(), v17.get()), v17.get()));\n      val v106 \u003d Step(icast(p1(48), StringType));\n      val v107 \u003d Step(e_ltrim(e_rtrim(v106.get(), v17.get()), v17.get()));\n      val v108 \u003d Step(icast(p1(46), StringType));\n      val v109 \u003d Step(e_ltrim(e_rtrim(v108.get(), v17.get()), v17.get()));\n      val v110 \u003d Step(icast(p1(25), StringType));\n      val v111 \u003d Step(e_ltrim(e_rtrim(v110.get(), v17.get()), v17.get()));\n      val v112 \u003d Step(v27.get().\u003d\u003d\u003d(v26.get()));\n      val v113 \u003d Step(v15.get().\u003d\u003d\u003d(v26.get()));\n      val v114 \u003d Step(v14.get().\u003d\u003d\u003d(icast(v26.get(), LongType)));\n      val v115 \u003d Step(lit(\"hardcode as NB21\"));\n      val v116 \u003d Step(lit(\",\"));\n      val v117 \u003d Step(lit(\"decl_signee_cd_nk\"));\n      val v118 \u003d Step(lit(255));\n      val v119 \u003d Step(when(v16.get().isNull, v19.get()).otherwise(v18.get()));\n      val v120 \u003d Step(when(v22.get().isNull, v19.get()).otherwise(v23.get()));\n      val v121 \u003d Step(when(v24.get().isNull, v19.get()).otherwise(v25.get()));\n      p1.iselect(v2.get(), v3.get(), v4.get(), v5.get(), v6.get(), v7.get(), v8.get(), v9.get(), v10.get(), v11.get(), v12.get(), v13.get(), v14.get(), v15.get(), v27.get(), md5(infaConcat(v29.get(), v31.get(), v33.get(), v35.get(), v37.get(), v39.get(), v23.get(), v41.get(), v43.get(), v45.get(), v47.get(), v49.get(), e_ltrim(e_rtrim(icast(v10.get(), StringType), v17.get()), v17.get()), e_ltrim(e_rtrim(v4.get(), v17.get()), v17.get()), v51.get(), v53.get(), v55.get(), e_ltrim(e_rtrim(icast(v8.get(), StringType), v17.get()), v17.get()), v57.get(), v59.get(), v18.get(), e_ltrim(e_rtrim(icast(icast(p1(6), LongType), StringType), v17.get()), v17.get()), v61.get(), v63.get(), v65.get(), e_ltrim(e_rtrim(icast(v5.get(), StringType), v17.get()), v17.get()), e_ltrim(e_rtrim(icast(v2.get(), StringType), v17.get()), v17.get()), v67.get(), v69.get(), v25.get(), v71.get(), v73.get(), v75.get(), e_ltrim(e_rtrim(v7.get(), v17.get()), v17.get()), v77.get(), v79.get(), e_ltrim(e_rtrim(icast(v11.get(), StringType), v17.get()), v17.get()), v81.get(), v83.get(), v85.get(), v87.get(), v89.get(), e_ltrim(e_rtrim(icast(v6.get(), StringType), v17.get()), v17.get()), v21.get(), v91.get(), v93.get(), v95.get(), v97.get(), v99.get(), v101.get(), e_ltrim(e_rtrim(v13.get(), v17.get()), v17.get()), v103.get(), v105.get(), v107.get(), e_ltrim(e_rtrim(icast(v9.get(), StringType), v17.get()), v17.get()), e_ltrim(e_rtrim(icast(v12.get(), StringType), v17.get()), v17.get()), v109.get(), v111.get())), icast(lit(params.str(\"GLOBAL.$JPBATCHKEY\")), LongType, true), when(v112.get(), lit(\"NK NULL CHECK\")).otherwise(when(v113.get(), lit(\"NK DUPLICATE CHECK\")).otherwise(when(v114.get(), lit(\"CONTRACT NOT MATCHED\")).otherwise(v19.get()))), when(v112.get(), lit(\"Natural keys are having NULL\")).otherwise(when(v113.get(), lit(\"OnlythelatestrecordloadedtoTargettable\")).otherwise(when(v114.get(), lit(\"DIM_NB_CONTRACT_SK-ConditionisnotmetforContractcasestatement\")).otherwise(v19.get()))), when(v112.get(), lit(\"REJECT\")).otherwise(when(v113.get(), lit(\"REJECT DUPLICATE\")).otherwise(when(v114.get(), lit(\"NB21 Data only\")).otherwise(v19.get()))), infaConcat(v115.get(), v116.get(), lit(\"req_declaration\"), v116.get(), lit(\"kwn_increq_declsgn\"), v116.get(), lit(\"dim_nb_declaration_signee\")), infaConcat(v115.get(), v116.get(), lit(\"reqmntid_ref\"), v116.get(), lit(\"kirdsgid_code\"), v116.get(), v117.get()), e_substr2(lit(params.str(\"GLOBAL.$JPTABLENAME\")), v26.get(), v118.get()), infaConcat(lit(\"src_sys_nm_nk\"), v116.get(), lit(\"reqr_ref_id_nk\"), v116.get(), lit(\"incmg_req_decl_signee_cd\"), v116.get(), v117.get()), infaConcat(v119.get(), v116.get(), when(v3.get().isNull, v19.get()).otherwise(v21.get()), v116.get(), v120.get(), v116.get(), v121.get()), current_timestamp(), e_substr2(lit(params.str(\"GLOBAL.$CURRENTMAPPINGNAME\")), v26.get(), v118.get()), v119.get(), when(v80.get().isNull, v19.get()).otherwise(v81.get()), when(v46.get().isNull, v19.get()).otherwise(v47.get()), when(v40.get().isNull, v19.get()).otherwise(v41.get()), when(v60.get().isNull, v19.get()).otherwise(v61.get()), v120.get(), v121.get(), when(v32.get().isNull, v19.get()).otherwise(v33.get()), when(v52.get().isNull, v19.get()).otherwise(v53.get()), when(v98.get().isNull, v19.get()).otherwise(v99.get()), when(v56.get().isNull, v19.get()).otherwise(v57.get()), when(v90.get().isNull, v19.get()).otherwise(v91.get()), when(v48.get().isNull, v19.get()).otherwise(v49.get()), when(v68.get().isNull, v19.get()).otherwise(v69.get()), when(v84.get().isNull, v19.get()).otherwise(v85.get()), when(v110.get().isNull, v19.get()).otherwise(v111.get()), when(v78.get().isNull, v19.get()).otherwise(v79.get()), when(v28.get().isNull, v19.get()).otherwise(v29.get()), when(v96.get().isNull, v19.get()).otherwise(v97.get()), e_substr2(when(v72.get().isNull, v19.get()).otherwise(v73.get()), v26.get(), lit(50)), when(v36.get().isNull, v19.get()).otherwise(v37.get()), when(v34.get().isNull, v19.get()).otherwise(v35.get()), when(v42.get().isNull, v19.get()).otherwise(v43.get()), when(v38.get().isNull, v19.get()).otherwise(v39.get()), when(v62.get().isNull, v19.get()).otherwise(v63.get()), when(v30.get().isNull, v19.get()).otherwise(v31.get()), when(v74.get().isNull, v19.get()).otherwise(v75.get()), when(v102.get().isNull, v19.get()).otherwise(v103.get()), when(v64.get().isNull, v19.get()).otherwise(v65.get()), when(v92.get().isNull, v19.get()).otherwise(v93.get()), when(v44.get().isNull, v19.get()).otherwise(v45.get()), when(v86.get().isNull, v19.get()).otherwise(v87.get()), when(v104.get().isNull, v19.get()).otherwise(v105.get()), when(v50.get().isNull, v19.get()).otherwise(v51.get()), when(v108.get().isNull, v19.get()).otherwise(v109.get()), when(v54.get().isNull, v19.get()).otherwise(v55.get()), when(v106.get().isNull, v19.get()).otherwise(v107.get()), when(v58.get().isNull, v19.get()).otherwise(v59.get()), when(v82.get().isNull, v19.get()).otherwise(v83.get()), when(v88.get().isNull, v19.get()).otherwise(v89.get()), when(v70.get().isNull, v19.get()).otherwise(v71.get()), when(v94.get().isNull, v19.get()).otherwise(v95.get()), when(v76.get().isNull, v19.get()).otherwise(v77.get()), when(v100.get().isNull, v19.get()).otherwise(v101.get()), when(v66.get().isNull, v19.get()).otherwise(v67.get())).persist(MEMORY_AND_DISK);\n    }\n\n    val f122:(DataFrame,DataFrame)\u003d\u003eUnit \u003d (p123,p124)\u003d\u003e{\n      val v125 \u003d Step(icast(lit(params.str(\"GLOBAL.$JPMAXSK\")), LongType, true));\n      val v126 \u003d Step(v125.get().+(p124(125)));\n      val v127 \u003d Step(p124(67));\n      val v128 \u003d Step(lit(0));\n      val v129 \u003d Step(lit(\"YYYY-MM-DD HH24:MI:SS\"));\n      val v130 \u003d Step(lit(255));\n      val v131 \u003d Step(lit(\"\"));\n      val v132 \u003d Step(p124.iselect(p124(62), p124(63), p124(64), p124(65), p124(66), p124(68), p124(69), p124(70), p124(71), p124(72), p124(73), p124(74), p124(75), p124(76), p124(77), p124(78), p124(79), p124(80), p124(81), p124(82), p124(83), p124(84), p124(85), p124(86), p124(87), p124(88), p124(89), p124(90), p124(91), p124(92), p124(93), p124(94), p124(95), p124(96), p124(97), p124(98), p124(99), p124(100), p124(101), p124(102), p124(103), p124(104), p124(105), p124(106), p124(107), p124(108), p124(109), p124(110), p124(111), p124(112), p124(113), p124(114), p124(115), p124(116), p124(117), p124(119), p124(120), p124(121), p124(122), p124(123), v126.get(), e_to_date(when(icast(v127.get().isNull, IntegerType).\u003d\u003d\u003d(v128.get()), lit(null)).otherwise(v127.get()), v129.get()), p124(118), v126.get(), v125.get(), e_substr2(lit(params.str(\"GLOBAL.$EDM_REDSHIFT_TARGET_FULL_SCHEMA\")), v128.get(), v130.get()), e_substr2(lit(params.str(\"GLOBAL.$CURRENTMAPPINGNAME\")), v128.get(), v130.get()), v131.get(), v131.get(), v131.get()).persist(MEMORY_AND_DISK));\n      val v133 \u003d Step(v132.get()(14));\n      val v134 \u003d Step(v132.get()(68));\n      val v135 \u003d Step(v132.get()(69));\n      val v136 \u003d Step(lit(256));\n      val v137 \u003d Step(v132.get()(15));\n      val v138 \u003d Step(p123.unionAll(v132.get().iselect(v133.get(), icast(v132.get()(67), LongType), e_to_date(v134.get(), v129.get()), v135.get(), v132.get()(61), v132.get()(62), v132.get()(10), v132.get()(60), v132.get()(16), v132.get()(0), v132.get()(1), v132.get()(17), v132.get()(2), v132.get()(3), v132.get()(11), v132.get()(18), v132.get()(19), v132.get()(20), v132.get()(21), v132.get()(4), v132.get()(22), v132.get()(5), v132.get()(23), v132.get()(24), v132.get()(25), v132.get()(26), v132.get()(27), v132.get()(28), v132.get()(6), v132.get()(29), v132.get()(30), v132.get()(7), v132.get()(31), v132.get()(32), v132.get()(33), v132.get()(34), v132.get()(35), v132.get()(36), v132.get()(37), v132.get()(38), v132.get()(39), v132.get()(40), v132.get()(41), v132.get()(42), v132.get()(43), v132.get()(44), v132.get()(45), v132.get()(8), v132.get()(46), v132.get()(47), e_substr2(v132.get()(48), v128.get(), v136.get()), v132.get()(9), v132.get()(49), e_substr2(v132.get()(50), v128.get(), v136.get()), v132.get()(51), v132.get()(52), v132.get()(53), v132.get()(54), v132.get()(55), v132.get()(56), v132.get()(57), v132.get()(58), v132.get()(59), v132.get()(12), e_substr2(v137.get(), v128.get(), lit(50)))));\n      val v139 \u003d Step(lit(35));\n      Async()(v138.get().iselect(icast(v138.get()(7), LongType), icast(v138.get()(8), StringType), icast(v138.get()(9), LongType), icast(v138.get()(10), LongType), icast(v138.get()(11), StringType), icast(v138.get()(12), StringType), icast(v138.get()(13), LongType), icast(v138.get()(14), LongType), icast(v138.get()(15), StringType), icast(v138.get()(16), StringType), icast(v138.get()(17), StringType), icast(v138.get()(18), StringType), icast(v138.get()(19), LongType), icast(v138.get()(20), StringType), e_to_char(icast(v138.get()(4), TimestampType), lit(\"YYYY-MM-DD HH24:MI:SS.US\")), icast(v138.get()(21), LongType), icast(v138.get()(22), StringType), icast(v138.get()(23), StringType), icast(v138.get()(24), StringType), icast(v138.get()(25), StringType), icast(v138.get()(26), StringType), icast(v138.get()(27), StringType), icast(v138.get()(28), LongType), icast(v138.get()(29), StringType), icast(v138.get()(30), StringType), icast(v138.get()(31), LongType), icast(v138.get()(32), StringType), icast(v138.get()(33), StringType), icast(v138.get()(34), StringType), icast(v138.get()(35), StringType), icast(v138.get()(36), StringType), icast(v138.get()(37), StringType), icast(v138.get()(38), StringType), icast(v138.get()(39), StringType), icast(v138.get()(40), StringType), icast(v138.get()(41), StringType), icast(v138.get()(42), StringType), icast(v138.get()(43), StringType), icast(v138.get()(44), StringType), icast(v138.get()(45), StringType), icast(v138.get()(46), StringType), icast(v138.get()(47), LongType), icast(v138.get()(48), StringType), icast(v138.get()(49), StringType), icast(v138.get()(50), StringType), icast(v138.get()(51), LongType), icast(v138.get()(52), StringType), icast(v138.get()(53), StringType), icast(v138.get()(54), StringType), icast(v138.get()(55), StringType), icast(v138.get()(56), StringType), icast(v138.get()(57), StringType), icast(v138.get()(5), StringType), icast(v138.get()(58), StringType), icast(v138.get()(59), StringType), icast(v138.get()(60), StringType), icast(v138.get()(61), StringType), icast(v138.get()(62), StringType), icast(v138.get()(6), StringType), icast(v138.get()(63), LongType), icast(e_substr2(e_to_char(v138.get()(0), v129.get()), v128.get(), v139.get()), StringType), icast(v138.get()(64), StringType), icast(v138.get()(1), LongType), icast(e_substr2(e_to_char(v138.get()(2), v129.get()), v128.get(), v139.get()), StringType), icast(v138.get()(3), StringType)).toDF(\"fact_nb_declaration_detail_sk\", \"src_sys_nm_nk\", \"dim_nb_requirement_ref_sk\", \"reqr_ref_id_nk\", \"src_reqr_cd\", \"reqr_cd\", \"dim_contract_sk\", \"dim_nb_contract_sk\", \"cnt_id_nk\", \"cnt_iss_cd_nk\", \"dat_src_cd_nk\", \"incmg_req_decl_signee_cd\", \"dim_nb_declaration_signee_sk\", \"decl_signee_cd_nk\", \"decl_sign_dt\", \"count_agent_signee_cd\", \"org_signee_title_nm\", \"reqr_signee_sign_ind\", \"decl_sign_city_nm\", \"decl_sign_cnty_cd\", \"decl_sign_st_cd\", \"decl_sign_cntry_cd\", \"dim_party_client_sk\", \"cl_id_nk\", \"src_cl_id\", \"dim_nb_applicant_sk\", \"examr_prfx_nm\", \"examr_first_nm\", \"examr_middle_nm\", \"examr_last_nm\", \"examr_sfx_nm\", \"examr_addr_ln_1\", \"examr_addr_ln_2\", \"examr_addr_ln_3\", \"examr_addr_ln_4\", \"examr_city_nm\", \"examr_cnty_cd\", \"examr_st_cd\", \"examr_zip_cd\", \"examr_cntry_cd\", \"examr_company_nm\", \"dim_nb_vendor_sk\", \"vendr_cd_nk\", \"examr_id\", \"examr_dtl_txt\", \"dim_govt_id_sk\", \"govt_id_num\", \"govt_id_tp_desc\", \"is_examr_on_medfee_list_yn_ind\", \"examr_sign_yn_ind\", \"examr_sign_quest_id_cd\", \"witness_by_agent_yn_ind\", \"witness_agent_quest_id_cd\", \"parent_sign_undr_14_yn_ind\", \"parent_sign_quest_id_cd\", \"person_exam_sign_yn_ind\", \"person_exam_quest_id_cd\", \"src_rec_sts_cd\", \"edh_record_status_in\", \"edh_created_batch_key\", \"edh_created_ts\", \"edh_created_nm\", \"edh_updated_batch_key\", \"edh_updated_ts\", \"edh_updated_nm\").write.mode(\"overwrite\").option(\"header\", true).option(\"emptyValue\", \"\").option(\"encoding\", \"UTF-8\").option(\"compression\", \"Gzip\").option(\"escape\", \"\\\\\").option(\"quote\", \"\u001f\").option(\"ignoreLeadingWhiteSpace\", false).option(\"ignoreTrailingWhiteSpace\", false).option(\"sep\", \"\u001e\").option(\"nullValue\", null).csv(\"s3a://nyl-datawarehouse-dev-rs-temp-20230120223907439400000003/rs-idmc-temp/6f443290-5377-4616-a285-bb1c2878913511172588616653782946703587245431862864/UPSERT_pdm_conv.fact_nb_declaration_detail_\"));\n      val v140 \u003d Step(v132.get().groupBy(v132.get()(13)).iagg(max(v132.get()(63)), last(v133.get(), false), last(v137.get(), false), last(v132.get()(64), false), last(v132.get()(65), false), last(v132.get()(66), false), last(v134.get(), false), last(v135.get(), false)));\n      Async()(v140.get().iselect(icast(v140.get()(4), StringType), icast(v140.get()(5), StringType), icast(v140.get()(3), LongType), icast(v140.get()(0), LongType), icast(e_substr2(e_to_char(v140.get()(1), v129.get()), v128.get(), v139.get()), StringType), icast(v140.get()(2), StringType), icast(v140.get()(6), StringType), icast(v140.get()(7), StringType)).toDF(\"schemaname\", \"jobname\", \"prev_maxsurkey\", \"maxsurkey\", \"created_ts\", \"created_nm\", \"updated_ts\", \"updated_nm\").write.mode(\"overwrite\").option(\"header\", true).option(\"emptyValue\", \"\").option(\"encoding\", \"UTF-8\").option(\"compression\", \"Gzip\").option(\"escape\", \"\\\\\").option(\"quote\", \"\u001f\").option(\"ignoreLeadingWhiteSpace\", false).option(\"ignoreTrailingWhiteSpace\", false).option(\"sep\", \"\u001e\").option(\"nullValue\", null).csv(\"s3a://nyl-datawarehouse-dev-rs-temp-20230120223907439400000003/rs-idmc-temp/6f443290-5377-4616-a285-bb1c2878913511172588616656182794585947723031862864/INSERT_ds_staging_conv.ops_etl_config_batch_key_\"));\n      Async.flush;\n    }\n\n    val f141:(DataFrame,DataFrame)\u003d\u003eUnit \u003d (p142,p143)\u003d\u003e{\n      val v144 \u003d Step(p143.itoDF(\"m\"));\n      val v145 \u003d Step(p142.join(v144.get(), v144.get()(62).\u003d\u003d\u003d(p142(15)), \"outer\").itoDF);\n      val v146 \u003d Step(v145.get()(134));\n      val v147 \u003d Step(lit(\"0\"));\n      val v148 \u003d Step(when(v146.get().isNull, v147.get()).otherwise(v146.get()));\n      val v149 \u003d Step(v148.get().!\u003d\u003d(v147.get()));\n      val v150 \u003d Step(v145.get()(15));\n      val v151 \u003d Step(when(v150.get().isNull, v147.get()).otherwise(v150.get()));\n      val v152 \u003d Step(v151.get().!\u003d\u003d(v147.get()));\n      val v153 \u003d Step(v149.get().\u0026\u0026(v152.get()));\n      val v154 \u003d Step(lit(0));\n      val v155 \u003d Step(lit(3));\n      val v156 \u003d Step(lit(1));\n      val v157 \u003d Step(lit(2));\n      val v158 \u003d Step(v145.get().iselectlist(List(v145.get()(72), v145.get()(73), v145.get()(74), v145.get()(75), v145.get()(76), v145.get()(77), v145.get()(78), v145.get()(79), v145.get()(80), v145.get()(81), v145.get()(82), v145.get()(83), v145.get()(84), v145.get()(85), v145.get()(86), v145.get()(87), v145.get()(88), v145.get()(89), v145.get()(90), v145.get()(91), v145.get()(92), v145.get()(93), v145.get()(94), v145.get()(95), v145.get()(96), v145.get()(97), v145.get()(98), v145.get()(99), v145.get()(100), v145.get()(101), v145.get()(102), v145.get()(103), v145.get()(104), v145.get()(105), v145.get()(106), v145.get()(107), v145.get()(108), v145.get()(109), v145.get()(110), v145.get()(111), v145.get()(112), v145.get()(113), v145.get()(114), v145.get()(115), v145.get()(116), v145.get()(117), v145.get()(118), v145.get()(119), v145.get()(120), v145.get()(121), v145.get()(122), v145.get()(123), v145.get()(124), v145.get()(125), v145.get()(126), v145.get()(127), v145.get()(128), v145.get()(129), v145.get()(130), v145.get()(131), v145.get()(132), v145.get()(133), v145.get()(0), v145.get()(1), v145.get()(2), v145.get()(3), v145.get()(4), v145.get()(5), v145.get()(6), v145.get()(7), v145.get()(8), v145.get()(9), v145.get()(10), v145.get()(11), v145.get()(12), v145.get()(16), v145.get()(22), v145.get()(25), v145.get()(26), v145.get()(27), v145.get()(28), v145.get()(29), v145.get()(30), v145.get()(31), v145.get()(32), v145.get()(33), v145.get()(34), v145.get()(35), v145.get()(36), v145.get()(37), v145.get()(38), v145.get()(39), v145.get()(40), v145.get()(41), v145.get()(42), v145.get()(43), v145.get()(44), v145.get()(45), v145.get()(46), v145.get()(47)).++(List(v145.get()(48), v145.get()(49), v145.get()(50), v145.get()(51), v145.get()(52), v145.get()(53), v145.get()(54), v145.get()(55), v145.get()(56), v145.get()(57), v145.get()(58), v145.get()(59), v145.get()(60), v145.get()(61), v145.get()(62), v145.get()(63), v145.get()(64), v145.get()(65), v145.get()(66), v145.get()(67), v145.get()(68), v145.get()(69), v145.get()(70), v145.get()(71), icast(when(v153.get().\u0026\u0026(v146.get().\u003d\u003d\u003d(v150.get())), v154.get()).otherwise(when(v153.get().\u0026\u0026(v146.get().!\u003d\u003d(v150.get())), v155.get()).otherwise(when(v148.get().\u003d\u003d\u003d(v147.get()).\u0026\u0026(v152.get()), v156.get()).otherwise(when(v149.get().\u0026\u0026(v151.get().\u003d\u003d\u003d(v147.get())), v157.get()).otherwise(lit(99))))), LongType)))).persist(MEMORY_AND_DISK));\n      val v159 \u003d Step(v158.get()(124));\n      val v160 \u003d Step(v158.get().where(v159.get().\u003d\u003d\u003d(icast(v157.get(), LongType))));\n      val v161 \u003d Step(lit(19));\n      val v162 \u003d Step(lit(\"YYYY-MM-DD HH24:MI:SS.US\"));\n      val v163 \u003d Step(icast(lit(params.str(\"GLOBAL.$JPBATCHKEY\")), LongType, true));\n      val v164 \u003d Step(current_timestamp());\n      val v165 \u003d Step(e_substr2(lit(params.str(\"GLOBAL.$CURRENTMAPPINGNAME\")), v154.get(), lit(50)));\n      val v166 \u003d Step(v158.get().where(v159.get().\u003d\u003d\u003d(icast(v155.get(), LongType))));\n      f122(v160.get().iselect(e_to_date(e_substr2(v160.get()(60), v154.get(), v161.get()), v162.get()), v163.get(), v164.get(), v165.get(), e_to_date(e_substr2(icast(v160.get()(14), StringType), v154.get(), v161.get()), v162.get()), v160.get()(52), lit(\"D\"), v160.get()(0), v160.get()(1), v160.get()(2), v160.get()(3), v160.get()(4), v160.get()(5), v160.get()(6), v160.get()(7), v160.get()(8), v160.get()(9), v160.get()(10), v160.get()(11), v160.get()(12), v160.get()(13), v160.get()(15), v160.get()(16), v160.get()(17), v160.get()(18), v160.get()(19), v160.get()(20), v160.get()(21), v160.get()(22), v160.get()(23), v160.get()(24), v160.get()(25), v160.get()(26), v160.get()(27), v160.get()(28), v160.get()(29), v160.get()(30), v160.get()(31), v160.get()(32), v160.get()(33), v160.get()(34), v160.get()(35), v160.get()(36), v160.get()(37), v160.get()(38), v160.get()(39), v160.get()(40), v160.get()(41), v160.get()(42), v160.get()(43), v160.get()(44), v160.get()(45), v160.get()(46), v160.get()(47), v160.get()(48), v160.get()(49), v160.get()(50), v160.get()(51), v160.get()(53), v160.get()(54), v160.get()(55), v160.get()(56), v160.get()(57), v160.get()(59), v160.get()(61)).unionAll(v166.get().iselect(e_to_date(e_substr2(v166.get()(60), v154.get(), v161.get()), v162.get()), v163.get(), v164.get(), v165.get(), e_to_date(e_substr2(icast(v166.get()(14), StringType), v154.get(), v161.get()), v162.get()), v166.get()(52), v166.get()(58), v166.get()(0), v166.get()(1), v166.get()(2), v166.get()(3), e_substr2(v166.get()(64), v154.get(), lit(20)), v166.get()(5), v166.get()(6), v166.get()(7), v166.get()(8), v166.get()(9), v166.get()(10), v166.get()(11), v166.get()(12), v166.get()(13), v166.get()(15), v166.get()(16), v166.get()(17), v166.get()(18), v166.get()(19), v166.get()(20), v166.get()(21), v166.get()(22), v166.get()(23), v166.get()(24), v166.get()(25), v166.get()(26), v166.get()(27), v166.get()(28), v166.get()(29), v166.get()(30), v166.get()(31), v166.get()(32), v166.get()(33), v166.get()(34), v166.get()(35), v166.get()(36), v166.get()(37), v166.get()(38), v166.get()(39), v166.get()(40), v166.get()(41), v166.get()(42), v166.get()(43), v166.get()(44), v166.get()(45), v166.get()(46), v166.get()(47), v166.get()(48), v166.get()(49), v166.get()(50), v166.get()(51), v166.get()(53), v166.get()(54), v166.get()(55), v166.get()(56), v166.get()(57), v166.get()(59), v166.get()(61))), v158.get().where(v159.get().\u003d\u003d\u003d(icast(v156.get(), LongType))).iselectWith(infa_sequence_generator(\"DisnextJobApplication\", \"U:1ykCmW6bEe-J83dMFZVvow\", \"6873465555853497819\", 1, 1L, 500, \"${AGENT_REST_URL_FOR_SEQ_GEN}\", 60000, 9223372036854775807L, \"SEQ_Surrogate_Key\", false, true, sc, org.apache.log4j.Level.INFO)));\n    }\n\n    val f167:(DataFrame)\u003d\u003eUnit \u003d (p168)\u003d\u003e{\n      val v169 \u003d Step(p168.itoDF);\n      val v170 \u003d Step(icast(v169.get()(0), StringType));\n      val v171 \u003d Step(lit(\" \"));\n      val v172 \u003d Step(lit(\"\"));\n      val v173 \u003d Step(icast(icast(v169.get()(2), LongType), StringType));\n      val v174 \u003d Step(icast(v169.get()(10), StringType));\n      val v175 \u003d Step(icast(v169.get()(12), StringType));\n      val v176 \u003d Step(infaConcat(when(e_ltrim(e_rtrim(v170.get(), v171.get()), v171.get()).isNull, v172.get()).otherwise(v170.get()), when(e_ltrim(e_rtrim(v173.get(), v171.get()), v171.get()).isNull, v172.get()).otherwise(v173.get()), when(e_ltrim(e_rtrim(v174.get(), v171.get()), v171.get()).isNull, v172.get()).otherwise(v174.get()), when(e_ltrim(e_rtrim(v175.get(), v171.get()), v171.get()).isNull, v172.get()).otherwise(v175.get())));\n      val v177 \u003d Step(lit(0));\n      val v178 \u003d Step(lit(1));\n      val v179 \u003d Step(getLeadLagOffset(1));\n      val v180 \u003d Step(org.apache.spark.sql.expressions.Window.partitionBy().orderBy(v178.get().asc));\n      val v181 \u003d Step(getLeadLagWindowIndex(v179.get(), false));\n      val v182 \u003d Step(getLeadLagWindowIndex(v179.get(), true));\n      val v183 \u003d Step(f0(v169.get().iselectWith(when(v176.get().\u003d\u003d\u003d(when(v177.get().\u003d\u003d\u003d(v178.get()), v176.get()).otherwise(when(v177.get().\u003c(v178.get()), lag(v176.get(), v179.get(), null).over(v180.get().rowsBetween(v181.get(), v181.get()))).otherwise(lead(v176.get(), v179.get(), null).over(v180.get().rowsBetween(v182.get(), v182.get()))))), v177.get()).otherwise(v178.get()))));\n      val v184 \u003d Step(v183.get()(14).\u003d\u003d\u003d(v178.get()).\u0026\u0026(v183.get()(13).\u003d\u003d\u003d(v178.get())).\u0026\u0026(v183.get()(12).\u003d\u003d\u003d(icast(v178.get(), LongType))));\n      val v185 \u003d Step(v183.get().where(v184.get().isNull.||(v184.get().unary_!)));\n      Async()(v185.get().iselect(icast(v185.get()(17), StringType), icast(v185.get()(18), StringType), icast(v185.get()(19), StringType), icast(v185.get()(21), StringType), icast(v185.get()(20), StringType), icast(v185.get()(23), StringType), icast(v185.get()(22), StringType), icast(v185.get()(24), StringType)).toDF(\"error_category\", \"error_description\", \"error_type\", \"source_column_name\", \"source_table_name\", \"target_column_name\", \"target_table_name\", \"error_column_value\").write.mode(\"overwrite\").option(\"header\", true).option(\"emptyValue\", \"\").option(\"encoding\", \"UTF-8\").option(\"compression\", \"Gzip\").option(\"escape\", \"\\\\\").option(\"quote\", \"\u001f\").option(\"ignoreLeadingWhiteSpace\", false).option(\"ignoreTrailingWhiteSpace\", false).option(\"sep\", \"\u001e\").option(\"nullValue\", null).csv(\"s3a://nyl-datawarehouse-dev-rs-temp-20230120223907439400000003/rs-idmc-temp/6f443290-5377-4616-a285-bb1c2878913511172588616645093342494091446571862864/INSERT_ds_staging_conv.etl_nb_reject_table_\"));\n      val v186 \u003d Step(sqlContext.read.option(\"emptyValue\", \"\").option(\"encoding\", \"UTF-8\").option(\"compression\", \"Gzip\").option(\"escape\", \"\\\\\").option(\"quote\", \"\\\"\").option(\"ignoreLeadingWhiteSpace\", false).option(\"ignoreTrailingWhiteSpace\", false).option(\"sep\", \"\u001e\").csv(\"s3a://nyl-datawarehouse-dev-rs-temp-20230120223907439400000003/rs-idmc-temp/6f443290-5377-4616-a285-bb1c2878913500172588616637345259289847619831862864\", ParseType[StructType](\"{LSLLSSLLSSSSLSSLSSSSSSLSSLSSSSSSSSSSSSSSSLSSSLSSSSSSSSSSSSSLSSLSS}\")).itoDF);\n      val v187 \u003d Step(icast(v186.get()(1), StringType));\n      val v188 \u003d Step(icast(v186.get()(2), LongType));\n      val v189 \u003d Step(icast(v186.get()(3), LongType));\n      val v190 \u003d Step(icast(v186.get()(4), StringType));\n      val v191 \u003d Step(icast(v186.get()(5), StringType));\n      val v192 \u003d Step(icast(v186.get()(6), LongType));\n      val v193 \u003d Step(icast(v186.get()(7), LongType));\n      val v194 \u003d Step(icast(v186.get()(8), StringType));\n      val v195 \u003d Step(icast(v186.get()(9), StringType));\n      val v196 \u003d Step(icast(v186.get()(10), StringType));\n      val v197 \u003d Step(icast(v186.get()(11), StringType));\n      val v198 \u003d Step(icast(v186.get()(12), LongType));\n      val v199 \u003d Step(icast(v186.get()(13), StringType));\n      val v200 \u003d Step(icast(e_to_date(v186.get()(14), lit(\"YYYY-MM-DD\")), TimestampType));\n      val v201 \u003d Step(icast(v186.get()(15), LongType));\n      val v202 \u003d Step(icast(v186.get()(16), StringType));\n      val v203 \u003d Step(icast(v186.get()(17), StringType));\n      val v204 \u003d Step(icast(v186.get()(18), StringType));\n      val v205 \u003d Step(icast(v186.get()(19), StringType));\n      val v206 \u003d Step(icast(v186.get()(20), StringType));\n      val v207 \u003d Step(icast(v186.get()(21), StringType));\n      val v208 \u003d Step(icast(v186.get()(22), LongType));\n      val v209 \u003d Step(icast(v186.get()(23), StringType));\n      val v210 \u003d Step(icast(v186.get()(24), StringType));\n      val v211 \u003d Step(icast(v186.get()(25), LongType));\n      val v212 \u003d Step(icast(v186.get()(26), StringType));\n      val v213 \u003d Step(icast(v186.get()(27), StringType));\n      val v214 \u003d Step(icast(v186.get()(28), StringType));\n      val v215 \u003d Step(icast(v186.get()(29), StringType));\n      val v216 \u003d Step(icast(v186.get()(30), StringType));\n      val v217 \u003d Step(icast(v186.get()(31), StringType));\n      val v218 \u003d Step(icast(v186.get()(32), StringType));\n      val v219 \u003d Step(icast(v186.get()(33), StringType));\n      val v220 \u003d Step(icast(v186.get()(34), StringType));\n      val v221 \u003d Step(icast(v186.get()(35), StringType));\n      val v222 \u003d Step(icast(v186.get()(36), StringType));\n      val v223 \u003d Step(icast(v186.get()(37), StringType));\n      val v224 \u003d Step(icast(v186.get()(38), StringType));\n      val v225 \u003d Step(icast(v186.get()(39), StringType));\n      val v226 \u003d Step(icast(v186.get()(40), StringType));\n      val v227 \u003d Step(icast(v186.get()(41), LongType));\n      val v228 \u003d Step(icast(v186.get()(42), StringType));\n      val v229 \u003d Step(icast(v186.get()(43), StringType));\n      val v230 \u003d Step(icast(v186.get()(44), StringType));\n      val v231 \u003d Step(icast(v186.get()(45), LongType));\n      val v232 \u003d Step(icast(v186.get()(46), StringType));\n      val v233 \u003d Step(icast(v186.get()(47), StringType));\n      val v234 \u003d Step(icast(v186.get()(48), StringType));\n      val v235 \u003d Step(icast(v186.get()(49), StringType));\n      val v236 \u003d Step(icast(v186.get()(50), StringType));\n      val v237 \u003d Step(icast(v186.get()(51), StringType));\n      val v238 \u003d Step(icast(v186.get()(52), StringType));\n      val v239 \u003d Step(icast(v186.get()(53), StringType));\n      val v240 \u003d Step(icast(v186.get()(54), StringType));\n      val v241 \u003d Step(icast(v186.get()(55), StringType));\n      val v242 \u003d Step(icast(v186.get()(56), StringType));\n      val v243 \u003d Step(icast(v186.get()(57), StringType));\n      val v244 \u003d Step(icast(v186.get()(58), StringType));\n      f141(v183.get().where(v184.get()).itoDF(\"d\"), v186.get().iselect(icast(v186.get()(0), LongType), v187.get(), v188.get(), v189.get(), v190.get(), v191.get(), v192.get(), v193.get(), v194.get(), v195.get(), v196.get(), v197.get(), v198.get(), v199.get(), v200.get(), v201.get(), v202.get(), v203.get(), v204.get(), v205.get(), v206.get(), v207.get(), v208.get(), v209.get(), v210.get(), v211.get(), v212.get(), v213.get(), v214.get(), v215.get(), v216.get(), v217.get(), v218.get(), v219.get(), v220.get(), v221.get(), v222.get(), v223.get(), v224.get(), v225.get(), v226.get(), v227.get(), v228.get(), v229.get(), v230.get(), v231.get(), v232.get(), v233.get(), v234.get(), v235.get(), v236.get(), v237.get(), v238.get(), v239.get(), v240.get(), v241.get(), v242.get(), v243.get(), v244.get(), icast(v186.get()(59), LongType), icast(v186.get()(60), StringType), icast(v186.get()(61), StringType), md5(infaConcat(e_ltrim(e_rtrim(v214.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v222.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v202.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v218.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v217.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v220.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v197.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v195.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v219.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v228.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v194.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v207.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v211.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(v191.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v232.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v203.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v234.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v201.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(v205.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v236.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v187.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v193.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(v196.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v221.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v225.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v192.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v188.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(v243.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v209.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v199.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v239.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v216.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v223.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v200.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(v241.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v213.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v227.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(v190.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v237.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v210.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v229.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v238.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v198.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v189.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(v206.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v226.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v240.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v215.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v204.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v242.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v244.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v224.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v230.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v235.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v208.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(icast(v231.get(), StringType), v171.get()), v171.get()), e_ltrim(e_rtrim(v233.get(), v171.get()), v171.get()), e_ltrim(e_rtrim(v212.get(), v171.get()), v171.get())))));\n    }\n\n    f167(sqlContext.read.option(\"emptyValue\", \"\").option(\"encoding\", \"UTF-8\").option(\"compression\", \"Gzip\").option(\"escape\", \"\\\\\").option(\"quote\", \"\\\"\").option(\"ignoreLeadingWhiteSpace\", false).option(\"ignoreTrailingWhiteSpace\", false).option(\"sep\", \"\u001e\").csv(\"s3a://nyl-datawarehouse-dev-rs-temp-20230120223907439400000003/rs-idmc-temp/6f443290-5377-4616-a285-bb1c287891350017258861664160218919654477808261862864\", ParseType[StructType](\"{SLLSSLLSSSSLSSLSSSSSSLSSLSSSSSSSSSSSSSSSLSSSLSSSSSSSSSSSSSL}\")));\n    val postJobs \u003d () \u003d\u003e {\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"posttask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(5)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"posttask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(6)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"posttask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(7)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"posttask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(8)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n      runUserDefinedJob(\"\", \"method\", \"\", \"com.informatica.cci.runtime.adapterutils.CCITaskUtils\", \"invocationMethod\", List(\"posttask\", \"package-AmazonRedshiftV2.46010506.light.zip\", \"/package/redshift/thirdparty\"), List(params.extern(9)), Map(Tuple2(\"LD_LIBRARY_PATH\", \"$PATH\")), sc)\n    }\n    postJobs()\n\n    sc.stop\n  }\n}\n[0] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/22775209828113808928590093844232198_udj]\n[1] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/22775209539593404440579109267250084_udj]\n[2] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/22775210149909613371654923636491965_udj]\n[3] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/22775211046690071333428358829216583_udj]\n[4] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/22775211257289945391143334269798113_udj]\n[5] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/22775209873399145579672570514457188_udj]\n[6] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/22775209588841077821336375183670142_udj]\n[7] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/2277521017655297405570354946214246_udj]\n[8] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/2277521111264396810138041019701646_udj]\n[9] -\u003e [/chef/target/01CAKB0E000000009PDI/sess6873465555853497819/22775211281583691483994016486056790_udj]\n","dependencies":[]}]