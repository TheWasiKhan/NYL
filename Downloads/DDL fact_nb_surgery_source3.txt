DROP TABLE IF EXISTS ds_staging_conv.fact_nb_surgery_source3;
CREATE TABLE ds_staging_conv.fact_nb_surgery_source3(
mcsrgyid_ref_src BIGINT,
medcndid_ref_src BIGINT,
kmdcndid_code_mc_src VARCHAR(20),
rquwrpid_ref_rr_src BIGINT,
kuwqstid_code_rr_src VARCHAR(10),
reqmntid_ref_src BIGINT,
cntrctid_ref_src BIGINT,
cntrctid_number_src VARCHAR(25),
kuwqstid_code_rrr_src VARCHAR(10),
kuwrplid_code_src VARCHAR(10),
rflxrpid_ref_src BIGINT,
reply_text_src VARCHAR(400),
dsmrplid_ref_src BIGINT,
dsmqstid_ref_src BIGINT,
cnlinsid_ref_src BIGINT,
kincrqid_code_src VARCHAR(10),
cntrctid_number VARCHAR(25),
dim_nb_requirement_ref_sk BIGINT,
iprsonid_ref BIGINT,
dim_nb_applicant_sk BIGINT,
client_ref BIGINT,
cntrctid_ref BIGINT,
issue_code_decode VARCHAR(32),
caseid_number VARCHAR(25),
cnt_iss_cd_nk VARCHAR(3),
dat_src_cd_nk VARCHAR(3),
dim_contract_sk BIGINT,
cnt_lvl1_sts_cd VARCHAR(2),
contract_type_decode VARCHAR(32),
prodctid_ref BIGINT,
plan_id_ref BIGINT,
kvndrid_ref BIGINT,
kvndrid_code VARCHAR(10),
source VARCHAR(10),
surgery_name VARCHAR(256),
surgery_details VARCHAR(100),
surgerydt_unknown_decode VARCHAR(32),
surgery_date VARCHAR(50),
surgerydt_approx_decode VARCHAR(32),
surgstid_code VARCHAR(10),
additional_details VARCHAR(200),
replydt_unknown_decode VARCHAR(32),
reply_date VARCHAR(50),
status_code VARCHAR(10),
onset_year BIGINT,
onset_month_decode VARCHAR(32),
recovery_year BIGINT,
recovery_month_decode VARCHAR(32),
src_rec_sts_cd VARCHAR(10),
edh_record_status_in VARCHAR(1),
dim_party_sk BIGINT,
party_id_nk VARCHAR(9),
ent_ref_cd VARCHAR(100)
);